from roputils import *

def _test():

    import time

    def _transition_graph(r: ROP_util):

        print(f"======= making register transition graph =======\n\n")

        t = time.time()

        trans_reg_graph, is_path = r.rop_searcher.get_trans_reg_graph()
        for dest in is_path.keys():
            print(f"dest: {dest}: {is_path[dest]}\n")

        print(f"======= register transition graph created in {time.time() - t} seconds =======\n\n")

    def _search_chain_ex0(r: ROP_util):

        print(f"======= searching for gadgets =======")

        print("load in rax 0x000000004f3f2f1f\n\n")

        t = time.time()

        gs = r.search_chain(wanted_effects = "rax = 0x000000004f3f2f1f", max_stack_byte_size = 300, max_search_cnt = 5, reg_start_values = "r15 = 0x000000004f3f2f2f, rbp = 0x10")
        for g in gs:
            g.show(capstone_handle=r.rop_searcher.capstone)
            print()
            pass

    def _search_chain_ex1(r: ROP_util):

        print(f"======= searching for gadgets =======")

        print("move in rax <- r13, r12 = r13, r14 = r13\n\n")

        t = time.time()

        gs = r.search_chain(wanted_effects = "rax = r13", max_stack_byte_size = 300, max_search_cnt = 5, reg_start_values = "r12 == r13, r14 == r13")
        for g in gs:
            g.show(capstone_handle=r.rop_searcher.capstone, show_stack=True)
            print()
            pass

    def _search_chain_ex2(r: ROP_util):

        print(f"======= searching for gadgets =======")

        print("move in rax <- r13, r13 = r13 + r14\n\n")

        t = time.time()

        gs = r.search_chain(wanted_effects = "rax = r13", max_stack_byte_size = 300, max_search_cnt = 5, reg_start_values = "r13 == r13 + r14")
        for g in gs:
            g.show(capstone_handle=r.rop_searcher.capstone, show_stack=True)
            print()

    def _search_chain_ex3(r: ROP_util):

        print(f"======= searching for gadgets =======")

        print("load in rax <- 0xffffffffffffffff \n\n")

        t = time.time()

        gs = r.search_chain(wanted_effects = "rax = 0xffffffffffffffff", max_stack_byte_size = 1, max_search_cnt = 5)
        for g in gs:
            g.show(capstone_handle=r.rop_searcher.capstone, show_stack=True)
            print()

    def _search_chain_ex4(r: ROP_util):

        print(f"======= searching for chains =======")

        print("move r9 <- rdi, rbx == rdi\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "r9 = rdi", max_stack_byte_size = 20, max_search_cnt = 5, reg_start_values = "rbx == rdi")
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass

    def _search_chain_ex5(r: ROP_util):

        print(f"======= searching for chains =======")

        print("r9 <- r13 - r14\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "r9 = r13 - r14", max_stack_byte_size = 20, max_search_cnt = 5)
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass    

    def _search_chain_ex6(r: ROP_util):

        print(f"======= searching for chains =======")

        print("r9 <- r9 + 1\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "r9 = r9 + 1", max_stack_byte_size = 160, max_search_cnt = 5)
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass

    def _search_chain_ex7(r: ROP_util):

        print(f"======= searching for chains =======")

        print("r9 <- r9 + r8\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "r9 = r9 + r8", max_stack_byte_size = 160, max_search_cnt = 5)
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            payload = r.make_payload()
            payload.add_chain(ch)
            payload = payload.build()

            print(f"payload {payload}")
            print()
            pass

    def _search_chain_ex8(r: ROP_util):

        print(f"======= searching for chains =======")

        print("load in r8 0x000000004f3f2f1f, rax fixed - nothing found\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "r8 = 0x000000004f3f2f1f", max_stack_byte_size = 160, max_search_cnt = 5, fixed_regs = ["rax"])
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass   

    def _search_chain_ex9(r: ROP_util):

        print(f"======= searching for chains =======")

        print("load in r8 0x000000004f3f2f1f\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "r8 = 0x000000004f3f2f1f", max_stack_byte_size = 4, max_search_cnt = 5)
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass

    def _search_chain_ex10(r: ROP_util):

        print(f"======= searching for chains =======")

        print("load in rax 0x000000004f3f2f1f, rdx and rax fixed\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "rax = 0x000000004f3f2f1f", reg_start_values = "rax == 0x109438593, rdx == 0xba045677", max_stack_byte_size = 300, max_search_cnt = 5)
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass

    def _search_chain_ex11(r: ROP_util):

        print(f"======= searching for chains =======")

        print("load in rax 0x000000004f3f2f1f, r15 and rbp fixed\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "rax = 0x000000004f3f2f1f", reg_start_values = "r15 == 0x000000004f3f2f2f, rbp == 0x10", 
                                max_stack_byte_size = 300, max_search_cnt = 5, only_gadgets = True)
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass

    def _search_chain_ex12(r: ROP_util):

        print(f"======= searching for chains =======")

        print("load in rax 0x000000004f3f2f1f, r12 fixed\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "rax = 0x000000004f3f2f1f", reg_start_values = "r12 == 0x10", 
                                max_stack_byte_size = 15, max_search_cnt = 2, only_gadgets = True)
        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass

    def _search_chain_ex13(r: ROP_util):

        print(f"======= searching for chains =======")

        print("rax = 0x000000004f3f2f1f, r9 = 0x000000004f3f2f1f, r12 == 0x10\n\n")

        t = time.time()

        # r.disable_bruteforce()
        chs = r.search_chain(wanted_effects = "rax = 0x000000004f3f2f1f, r9 = 0x000000004f3f2f1f", reg_start_values = "r12 == 0x10", 
                                max_stack_byte_size = 240, max_search_cnt = 2, only_gadgets = False)

        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)

            payload = r.make_payload()
            payload.add_chain(ch)
            payload = payload.build()

            print(f"payload {payload}")

            print()
            pass

    def _search_chain_ex14(r: ROP_util):

        print(f"======= searching for chains =======")

        print("rax = 0x000000004f3f2f1f, rdx = r12\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "rax = 0x000000004f3f2f1f, rdx = r12", max_stack_byte_size = 30, max_search_cnt = 1)

        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass

    def _search_chain_ex15(r: ROP_util):

        print(f"======= searching for chains =======")

        print("r9 = r9 + r9 - nothing found\n\n")

        t = time.time()

        chs = r.search_chain(wanted_effects = "rax = r9 + r9", max_stack_byte_size = 30, max_search_cnt = 100)

        for ch in chs:
            ch.show(capstone_handle=r.rop_searcher.capstone)
            #print(f"payload {ch.make_payload(20)}")
            print()
            pass

    #bin = "app"
    bin = "/usr/lib/x86_64-linux-gnu/libc-2.31.so"
    #bin = "libc6_2.27-3ubuntu1.2_amd64.so"
    #bin = "/usr/bin/ls"
    #bin = "/usr/bin/z3"

    print(f"======= running roputils.py test =======")

    t = time.time()

    r = ROP_util(bin, Platform.X86_64)    
    r.scout_for_gadgets()

    for ef in ["LOAD_S", "LOAD_CT", "MOV_RR", "ARITH"]:
        for reg in r.platform.SUPPORTED_REGS:
            print(f"{ef}, out reg {reg}: {len(r.rop_searcher.effects_to_gadgets[ef][reg])}")

    #_transition_graph(r)
    #_search_chain_ex0(r)
    #_search_chain_ex1(r)
    #_search_chain_ex2(r)
    #_search_chain_ex3(r)
    #_search_chain_ex4(r)
    #_search_chain_ex5(r)
    _search_chain_ex6(r)
    _search_chain_ex7(r)
    #_search_chain_ex8(r)
    #_search_chain_ex9(r)
    #_search_chain_ex10(r)
    _search_chain_ex11(r)
    #_search_chain_ex12(r)
    #_search_chain_ex13(r)
    #_search_chain_ex14(r)
    #_search_chain_ex15(r)

if __name__ == "__main__":
    _test()
