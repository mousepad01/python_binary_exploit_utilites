from roputils import ROP_util
from rop_platform import Platform
from rand import random

import time

def _test():

    def _search_chain_ex0(r: ROP_util):

        print(f"======= searching for gadgets =======")

        print("load in rax 0x000000004f3f2f1f, r15 and rbp fixed\n\n")

        t = time.time()

        gs = r.search_chain(wanted_effects = "rax = 0x000000004f3f2f1f", max_stack_byte_size = 300, max_search_cnt = 5, reg_start_values = "r15 = 0x000000004f3f2f2f, rbp = 0x10")
        for g in gs:
            g.show(capstone_handle=r.rop_searcher.capstone)
            print()
            pass

    random.seed(0)

    # bin = "/lib/aarch64-linux-gnu/libc.so.6"
    bin = "./libc_2.33_arm64"

    print(f"======= running roputils.py test =======")

    t = time.time()

    r = ROP_util(bin, Platform.ARM64)   
    r.scout_for_gadgets()

    for ef in ["LOAD_S", "LOAD_CT", "MOV_RR", "ARITH"]:
        for reg in r.platform.SUPPORTED_REGS:
            print(f"{ef}, out reg {reg}: {len(r.rop_searcher.raw_effects_to_gadgets[ef][reg])} | {len(r.rop_searcher.effects_to_gadgets[ef][reg])}")

    r.rop_searcher.valid_stats()

    _search_chain_ex0(r)

if __name__ == "__main__":
    _test()
